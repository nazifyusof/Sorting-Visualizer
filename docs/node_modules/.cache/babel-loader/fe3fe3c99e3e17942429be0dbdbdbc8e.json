{"ast":null,"code":"var _jsxFileName = \"/Users/owner/myProject/Sorting-Visualizer/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from 'react';\nimport './SortingVisualizer.css';\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 100; i++) {\n      array.push(randomIntFromInterval(5, 1000));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, array.map((value, idx) => React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, value)));\n  }\n\n}\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/Users/owner/myProject/Sorting-Visualizer/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","render","map","value","idx","min","max","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AAEA,eAAe,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAA+C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAE;AACR,UAAMF,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIG,CAAC,GAAE,CAAX,EAAeA,CAAC,GAAG,GAAnB,EAAyBA,CAAC,EAA1B,EAA6B;AACzBH,MAAAA,KAAK,CAACI,IAAN,CAAWC,qBAAqB,CAAC,CAAD,EAAG,IAAH,CAAhC;AACH;;AACD,SAAKC,QAAL,CAAc;AAACN,MAAAA;AAAD,KAAd;AACH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,KAAK,CAACQ,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,KACP;AAAK,MAAA,SAAS,EAAG,WAAjB;AAA6B,MAAA,GAAG,EAAEA,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KADL,CADH,CADL,CADJ;AAUH;;AAlCyD;;AAqC9D,SAASJ,qBAAT,CAA+BM,GAA/B,EAAoCC,GAApC,EAAwC;AACpC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACH","sourcesContent":["import React from 'react';\nimport './SortingVisualizer.css';\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i =0 ; i < 100 ; i++){\n            array.push(randomIntFromInterval(5,1000));\n        }\n        this.setState({array});\n    }\n\n    render(){\n        const {array} = this.state;\n\n        return (\n            <div>\n                {array.map((value, idx) => (\n                    <div className = 'array-bar' key={idx}>\n                        {value}\n                    </div>\n                ))}\n\n            </div>   \n        );\n    }\n}\n\nfunction randomIntFromInterval(min, max){\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}"]},"metadata":{},"sourceType":"module"}