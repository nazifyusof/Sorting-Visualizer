{"ast":null,"code":"var _jsxFileName = \"/Users/owner/myProject/Sorting-Visualizer/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from 'react';\nimport './SortingVisualizer.css';\nimport * as sortingAlgorithms from '../SortingAlgorithms.js';\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 180; i++) {\n      array.push(randomIntFromInterval(5, 650));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  mergeSort() {\n    const javascriptsortedArray = this.state.array.slice().sort();\n    const sortedArray = sortingAlgorithms.mergeSort(this.state.array);\n    console.log(sortedArray);\n    console.log(arraysAreEqual(javascriptsortedArray, sortedArray));\n  }\n\n  quickSort() {}\n\n  heapSort() {}\n\n  bubbleSort() {}\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, array.map((value, idx) => React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: idx,\n      style: {\n        height: `${value}px`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Generate New Array\"), React.createElement(\"button\", {\n      onClick: () => this.mergeSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Merge Sort\"), React.createElement(\"button\", {\n      onClick: () => this.quickSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Quick Sort\"), React.createElement(\"button\", {\n      onClick: () => this.heapSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Heap Sort\"), React.createElement(\"button\", {\n      onClick: () => this.bubbleSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Bubble Sort\"), React.createElement(\"button\", {\n      onClick: () => this.testSortingAlgorithms(),\n      class: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Test Sorting Algorithms (BROKEN)\"));\n  }\n\n} //from internet\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * Math.floor(max - min + 1 + min));\n}\n\nfunction arraysAreEqual(x, y) {\n  if (x.length !== y.length) {\n    return false;\n  }\n\n  for (let i = 0; i < x.length; i++) {\n    if (x[i] !== y[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/owner/myProject/Sorting-Visualizer/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","sortingAlgorithms","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","mergeSort","javascriptsortedArray","slice","sort","sortedArray","console","log","arraysAreEqual","quickSort","heapSort","bubbleSort","render","map","value","idx","height","testSortingAlgorithms","min","max","Math","floor","random","x","y","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './SortingVisualizer.css';\nimport * as sortingAlgorithms from '../SortingAlgorithms.js';\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i =0 ; i < 180 ; i++){\n            array.push(randomIntFromInterval(5,650));\n        }\n        this.setState({array});\n    }\n\n    mergeSort(){\n        const javascriptsortedArray = this.state.array.slice().sort();\n        const sortedArray = sortingAlgorithms.mergeSort(this.state.array);\n\n        console.log(sortedArray);\n        console.log(arraysAreEqual(javascriptsortedArray, sortedArray));\n    }\n\n    quickSort(){\n\n    }\n\n    heapSort(){\n\n    }\n\n    bubbleSort(){\n        \n    }\n\n    render(){\n        const {array} = this.state;\n\n        return (\n            <div>\n                {array.map((value, idx) => (\n                    <div className = 'array-bar' key={idx} style = {{height: `${value}px`}}>\n                    </div>\n                ))}\n                <button onClick={() => this.resetArray()} >Generate New Array</button>\n                <button onClick={() => this.mergeSort()}>Merge Sort</button>\n                <button onClick={() => this.quickSort()}>Quick Sort</button>\n                <button onClick={() => this.heapSort()}>Heap Sort</button>\n                <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n                <button onClick={() => this.testSortingAlgorithms()}class=\"button\">\n                Test Sorting Algorithms (BROKEN)\n                </button>\n\n            </div>   \n        );\n    }\n}\n\n//from internet\nfunction randomIntFromInterval(min, max){\n    return Math.floor(Math.random() * Math.floor((max - min + 1) + min))\n}\n\nfunction arraysAreEqual(x,y){\n    if(x.length !== y.length){\n        return false;\n    }\n    for(let i = 0; i  < x.length; i++){\n        if(x[i] !== y[i]){\n            return false;\n        }\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}